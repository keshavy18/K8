apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: nginx-restricted
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'docker/default'
spec:
  privileged: false
  allowPrivilegeEscalation: true
  allowedCapabilities:
    - NET_BIND_SERVICE
  # This is redundant with non-root + disallow privilege escalation,
  # but we can provide it for defense in depth.
  requiredDropCapabilities:
    - ALL
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 2000000000
  runAsUser:
    rule: MustRunAs
    ranges:
      - min: 101
        max: 101
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 2000000000
  volumes:
    - 'emptyDir'
    - 'secret'
    - 'configMap'
  hostPID: false
  hostIPC: false
  hostNetwork: false
  readOnlyRootFilesystem: false
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nginx-restricted-psp-user
  namespace: ingress-nginx
rules:
  - apiGroups:
      - policy
    resources:
      - podsecuritypolicies
    resourceNames:
      - nginx-restricted
    verbs:
      - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nginx-ingress-psp-restricted
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nginx-restricted-psp-user
subjects:
  - kind: ServiceAccount
    name: ingress-nginx
    namespace: ingress-nginx
